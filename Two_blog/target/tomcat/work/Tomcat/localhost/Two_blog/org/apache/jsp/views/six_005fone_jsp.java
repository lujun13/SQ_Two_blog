/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-01-09 04:40:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class six_005fone_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>Bootstrap 博客</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css\">\r\n");
      out.write("    <script src=\"https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js\"></script>\r\n");
      out.write("    <style>\r\n");
      out.write("        .fakeimg {\r\n");
      out.write("            height: 200px;\r\n");
      out.write("            background: #aaa;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div  class=\"jumbotron text-center\" style=\"background:url(../img/six_back.jpg);\" style=\"margin-bottom:0\" > >\r\n");
      out.write("<h1  style=\"font-size:80px\" > <font color=\"hotpink\">博客</font></h1>\r\n");
      out.write("<p  style=\"font-size: 45px;\" ><font color=red>记录美好生活！</font></p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<nav class=\"navbar navbar-inverse\">\r\n");
      out.write("    <div class=\"container-fluid\">\r\n");
      out.write("        <div class=\"navbar-header\">\r\n");
      out.write("            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("                <span class=\"icon-bar\"></span>\r\n");
      out.write("                <span class=\"icon-bar\"></span>\r\n");
      out.write("                <span class=\"icon-bar\"></span>\r\n");
      out.write("            </button>\r\n");
      out.write("            <a class=\"navbar-brand\" href=\"#\" ><font color=red>博客Blog</font></a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("            <ul  class=\"nav navbar-nav\">\r\n");
      out.write("                <li class=\"active\"><a href=\"#\"><font color=yellow p>话题top</font></a></li>\r\n");
      out.write("                <li><a href=\"#\"><font color=green p>订阅内容</font></a></li>\r\n");
      out.write("                <li><a href=\"#\"><font color=dodgerblue p>#overwatch#</font></a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"container\" style=\"background:burlywood\">\r\n");
      out.write("  <div class=\"row\">\r\n");
      out.write("<div class=\"col-sm-4\">\r\n");
      out.write("    <h2><font color=orange>每日精选</font></h2>\r\n");
      out.write("    <h5>🐰🐰🐰🐰🐰🐰</h5>\r\n");
      out.write("    <div class=\"fakeimg\"><img src=\"../img/six_jingxuan.png\"/></div>\r\n");
      out.write("\r\n");
      out.write("    <h3 ><a href=\"http://127.0.0.1:8020/Sqxy_two_1/blog/views/six_one.html\">娱乐游戏</a></h3>\r\n");
      out.write("    <p>《守望先锋》（Overwatch，简称OW） 是由暴雪娱乐公司开发的一款第一人称射击游戏，于2016年5月24日全球上市，中国大陆地区由网易公司代理。</p>\r\n");
      out.write("    <ul class=\"nav nav-pills nav-stacked\">\r\n");
      out.write("        <li class=\"active\"><a href=\"http://127.0.0.1:8020/Sqxy_two_1/blog/views/six_one.html\">守望先锋</a></li>\r\n");
      out.write("        <li><a href=\"six_one.html\">返回首页</a></li>\r\n");
      out.write("\r\n");
      out.write("    </ul>\r\n");
      out.write("    <hr class=\"hidden-sm hidden-md hidden-lg\">\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"col-sm-8\">\r\n");
      out.write("    <h2><font color=darkorange>暴雪的开山之作：守望先锋 Overwatch</font></h2>\r\n");
      out.write("    <h5>作者：三位一体Trine</h5>\r\n");
      out.write("    <div class=\"fakeimg\"><img src=\"../img/six_owwb.png\"/></div>\r\n");
      out.write("    <p>-</p>\r\n");
      out.write("    <p> -</p>\r\n");
      out.write("    <p> -</p>\r\n");
      out.write("    <p> -</p>\r\n");
      out.write("    <p><font color=darkorange><b><font size=\"30\">我</font></b></font>喜欢玩射击游戏，但只玩任务版，一直对网上对战有畏惧感。我尝试过几次，体验非常糟糕。就是一群人在疯狂的边跳边跑边开枪，速度极快，我上去还没搞清楚情况就死掉，毫无参与感。我只能自我安慰说这种游戏不是给我这年纪设计的。职业玩家的最佳年龄是20上下。25以上算老将了，反应和手速都和年轻人没法比。\r\n");
      out.write("\r\n");
      out.write("        射击游戏是最大的不容忽视的游戏类别，暴雪是最受欢迎的游戏公司，但暴雪直到今年才有了守望先锋（Overwatch）这款大作。暴雪能在这个领域成功吗，它能带来什么变化呢？\r\n");
      out.write("\r\n");
      out.write("        我的体会是，守望先锋是厚积薄发的成功之作，破除了我对多人射击的固有印象。我很爱玩。我从游戏设计的方面谈谈对它的理解。</p>\r\n");
      out.write("    <p>一、角色\r\n");
      out.write("\r\n");
      out.write("        守望先锋把射击和MOBA这两个游戏类别结合起来了。\r\n");
      out.write("\r\n");
      out.write("        像MOBA一样，守望先锋提供了玩法各不相同的英雄，武器不同，各有技能，可以蓄大招。英雄之间有的是完美配合，有的是克制。这种设计思路的游戏玩起来组合多样，没有重复感，久玩不厌。包括三国杀这样的卡牌游戏也是，排列组合的花样太多了，永远不知道下一局会是什么样。对于嫌弃MOBA规则太复杂、动作性不强的玩家，守望先锋可以说是取其精华去其糟粕了。\r\n");
      out.write("\r\n");
      out.write("        守望先锋的英雄分作四大类。中坚型是团队的核心，肉厚禁揍，能顶住炮火组织攻势，擅长近距离作战。进攻型移动迅速，火力猛，可远袭可近攻可包抄。防御型善于狙击、布阵。辅助型会加血，强化友军，弱化敌军。\r\n");
      out.write("\r\n");
      out.write("        在这些英雄里，有难有易。新手和高手都能各得其乐。高手又快又准，根据战场局势调整打法，关键时刻一个大招逆转形势。新手可以选简单的入手，血多的，不用瞄准的。先熟悉战场，在后面做支援或者打打黑枪什么的，慢慢提高技术。</p>\r\n");
      out.write("    <p>二、规则\r\n");
      out.write("\r\n");
      out.write("        守望先锋绝对不会有其他游戏那种一群疯子乱跳乱跑的感觉。游戏里运动速度不算很快。更重要是，游戏规则让人有目标的往一个地方凑。\r\n");
      out.write("\r\n");
      out.write("        大体上有三种玩法，以及其他一些混合类。第一种是一方守、一方攻，进攻方要攻进对方大本营。第二种双方要抢夺和控制一块地方。第三种很有特色，是护送。进攻方要抢占一辆车，车慢慢沿着路线往前走，要在限时内到达终点。防守方就是要反过来控制这辆车，推迟它行进的速度。这种玩法，争夺的焦点在于车。车是动的，整个地图的各个关卡都要历经一遍，最体现地图设计的趣味性。\r\n");
      out.write("\r\n");
      out.write("        所有这些玩法，重点都不是搜索敌人杀死敌人，而是完成任务。搜索的成分非常低，因为所有人都往一个地方来。杀敌仍然是主要手段，是游戏核心，但这并不是目标，死伤数和输赢无关。注意拿这些设定和其他多人射击游戏相比较，守望先锋改变了射击游戏的驱动力，极大了增强了趣味性。应该说，它更像个强调团队合作、形势判断、和动作技巧的体育游戏，而不是一味乱打乱杀。</p>\r\n");
      out.write("    <h ><img src=\"../img/six_lunbo2.png\"/></h>\r\n");
      out.write("\r\n");
      out.write("    <br>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"jumbotron text-center\" style=\"background:url(../img/six-backdown.png);>\r\n");
      out.write("    <form  action=\"form_action.asp\" method=\"get\">\r\n");
      out.write("First name: <input type=\"text\" name=\"fname\" />\r\n");
      out.write("Last name: <input type=\"text\" name=\"lname\" />\r\n");
      out.write("<input type=\"submit\" value=\"Submit\" />\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<form >\r\n");
      out.write("    <table >\r\n");
      out.write("        <div align=\"center\">\r\n");
      out.write("            <tr align=\"center\">\r\n");
      out.write("                <td >评论框</td>\r\n");
      out.write("                <td >\r\n");
      out.write("                    <textarea>\r\n");
      out.write("                    </textarea>\r\n");
      out.write("                </td>\r\n");
      out.write("            </tr>\r\n");
      out.write("        </div>\r\n");
      out.write("    </table>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<p>Copying © 1996 - 2019 BIOG Corporation,All Rights Resered</p>\r\n");
      out.write("<p>BLOG公司 版权所有</p>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
